<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [ledButtonExample\ledButtonExample.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ledButtonExample\ledButtonExample.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon May 03 13:09:42 2021
<BR><P>
<H3>Maximum Stack Usage =        156 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
led_get_signal &rArr; led_get_signal_id_u8 &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1a]">I2C3_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[13]">LPTIM1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[a]">RCC_CRS_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[22]">RNG_LPUART1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[25]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l072xx.o(.text)
 <LI><a href="#[19]">TIM21_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[1b]">TIM22_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[18]">TIM7_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[e]">TSC_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[14]">USART4_5_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[23]">USB_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l072xx.o(.text) referenced from startup_stm32l072xx.o(RESET)
 <LI><a href="#[26]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l072xx.o(.text)
 <LI><a href="#[30]">button_get_signal</a> from button_task.o(i.button_get_signal) referenced from micros_core.o(.data)
 <LI><a href="#[2e]">button_init</a> from button_task.o(i.button_init) referenced from micros_core.o(.data)
 <LI><a href="#[2f]">button_main</a> from button_task.o(i.button_main) referenced from micros_core.o(.data)
 <LI><a href="#[2a]">button_state_wait_debounce</a> from button_task.o(i.button_state_wait_debounce) referenced from button_task.o(i.button_state_wait_press)
 <LI><a href="#[2a]">button_state_wait_debounce</a> from button_task.o(i.button_state_wait_debounce) referenced from button_task.o(i.button_state_wait_release)
 <LI><a href="#[28]">button_state_wait_long_press</a> from button_task.o(i.button_state_wait_long_press) referenced from button_task.o(i.button_state_wait_debounce)
 <LI><a href="#[28]">button_state_wait_long_press</a> from button_task.o(i.button_state_wait_long_press) referenced from button_task.o(i.button_state_wait_long_press)
 <LI><a href="#[28]">button_state_wait_long_press</a> from button_task.o(i.button_state_wait_long_press) referenced from button_task.o(i.button_state_wait_press)
 <LI><a href="#[27]">button_state_wait_press</a> from button_task.o(i.button_state_wait_press) referenced from button_task.o(i.button_init)
 <LI><a href="#[27]">button_state_wait_press</a> from button_task.o(i.button_state_wait_press) referenced from button_task.o(i.button_state_wait_debounce)
 <LI><a href="#[27]">button_state_wait_press</a> from button_task.o(i.button_state_wait_press) referenced from button_task.o(i.button_state_wait_press)
 <LI><a href="#[27]">button_state_wait_press</a> from button_task.o(i.button_state_wait_press) referenced from button_task.o(i.button_state_wait_release)
 <LI><a href="#[29]">button_state_wait_release</a> from button_task.o(i.button_state_wait_release) referenced from button_task.o(i.button_state_wait_long_press)
 <LI><a href="#[29]">button_state_wait_release</a> from button_task.o(i.button_state_wait_release) referenced from button_task.o(i.button_state_wait_release)
 <LI><a href="#[2d]">led_get_signal</a> from led_task.o(i.led_get_signal) referenced from micros_core.o(.data)
 <LI><a href="#[2b]">led_init</a> from led_task.o(i.led_init) referenced from micros_core.o(.data)
 <LI><a href="#[2c]">led_main</a> from led_task.o(i.led_main) referenced from micros_core.o(.data)
 <LI><a href="#[24]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[31]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[36]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[70]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[71]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[72]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[73]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>RNG_LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>USART4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_enqueue_signal
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_add
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[79]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[48]"></a>HAL_GPIO_Init</STRONG> (Thumb, 472 bytes, Stack size 16 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[50]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_release
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_press
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
</UL>

<P><STRONG><a name="[53]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id_u8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id
</UL>

<P><STRONG><a name="[54]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id_u8
</UL>

<P><STRONG><a name="[3f]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[42]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[37]"></a>HAL_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>HAL_InitTick</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[39]"></a>HAL_MspInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[3c]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[3e]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 498 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[40]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[41]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1764 bytes, Stack size 32 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[3b]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SystemClock_Config</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l072xx.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[30]"></a>button_get_signal</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, button_task.o(i.button_get_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = button_get_signal
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_signal_id_u8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_signal_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>button_init</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, button_task.o(i.button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = button_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>button_main</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, button_task.o(i.button_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = button_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_deallocate
</UL>

<P><STRONG><a name="[2d]"></a>led_get_signal</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, led_task.o(i.led_get_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = led_get_signal &rArr; led_get_signal_id_u8 &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id_u8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>led_init</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, led_task.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = led_init &rArr; micros_event_substate_set &rArr; micros_add_task_subs &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_substate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>led_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, led_task.o(i.led_main))
<BR>[Address Reference Count : 1]<UL><LI> micros_core.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_main
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_allTaskInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_timer_fake_interrupt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[65]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_allocate
</UL>

<P><STRONG><a name="[59]"></a>mcu_timer_fake_interrupt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, micros_mcu_timer.o(i.mcu_timer_fake_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mcu_timer_fake_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>micros_allTaskInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, micros_core.o(i.micros_allTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = micros_allTaskInit
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>micros_event_dispatch</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, micros_core.o(i.micros_event_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_enqueue_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_softtimer_main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_publish
</UL>

<P><STRONG><a name="[4a]"></a>micros_event_publish</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, micros_core.o(i.micros_event_publish))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = micros_event_publish &rArr; micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_softtimer_main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_short_press_operation
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_long_press_operation
</UL>

<P><STRONG><a name="[55]"></a>micros_event_substate_set</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, micros_core.o(i.micros_event_substate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = micros_event_substate_set &rArr; micros_add_task_subs &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_remove_task_subs
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_add_task_subs
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[56]"></a>micros_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, micros_core.o(i.micros_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = micros_init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_softtimer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>micros_main</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, micros_core.o(i.micros_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = micros_main &rArr; micros_softtimer_main &rArr; micros_event_publish &rArr; micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_softtimer_main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_deallocate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_is_empty_sig_list
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_dequeue_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>micros_memory_allocate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, micros_mem.o(i.micros_memory_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_enqueue_signal
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_add_task_subs
</UL>

<P><STRONG><a name="[5d]"></a>micros_memory_deallocate</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, micros_mem.o(i.micros_memory_deallocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = micros_memory_deallocate &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_main
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_delete
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_remove_task_subs
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_dequeue_signal
</UL>

<P><STRONG><a name="[63]"></a>micros_softtimer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, micros_softtimer.o(i.micros_softtimer_init))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_init
</UL>

<P><STRONG><a name="[64]"></a>micros_softtimer_main</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, micros_softtimer.o(i.micros_softtimer_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = micros_softtimer_main &rArr; micros_event_publish &rArr; micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_dispatch
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_publish
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_main
</UL>

<P><STRONG><a name="[4c]"></a>micros_timer_cancel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, micros_softtimer.o(i.micros_timer_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = micros_timer_cancel &rArr; micros_timer_delete &rArr; micros_memory_deallocate &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_search
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_softtimer_main
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id_u8
</UL>

<P><STRONG><a name="[4d]"></a>micros_timer_event_dispatch</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, micros_softtimer.o(i.micros_timer_event_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_create_tmkey
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_add
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_release
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_press
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal_id_u8
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[51]"></a>led_get_signal_id</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, led_task.o(i.led_get_signal_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = led_get_signal_id &rArr; HAL_GPIO_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal
</UL>

<P><STRONG><a name="[52]"></a>led_get_signal_id_u8</STRONG> (Thumb, 562 bytes, Stack size 32 bytes, led_task.o(i.led_get_signal_id_u8))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = led_get_signal_id_u8 &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_get_signal
</UL>

<P><STRONG><a name="[46]"></a>button_get_signal_id</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, button_task.o(i.button_get_signal_id))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_signal
</UL>

<P><STRONG><a name="[47]"></a>button_get_signal_id_u8</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_task.o(i.button_get_signal_id_u8))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_signal
</UL>

<P><STRONG><a name="[49]"></a>button_long_press_operation</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, button_task.o(i.button_long_press_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = button_long_press_operation &rArr; micros_event_publish &rArr; micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_publish
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_long_press
</UL>

<P><STRONG><a name="[4e]"></a>button_press_operation</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_task.o(i.button_press_operation))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
</UL>

<P><STRONG><a name="[4f]"></a>button_release_operation</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_task.o(i.button_release_operation))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
</UL>

<P><STRONG><a name="[4b]"></a>button_short_press_operation</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, button_task.o(i.button_short_press_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = button_short_press_operation &rArr; micros_event_publish &rArr; micros_event_dispatch &rArr; micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_publish
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_debounce
</UL>

<P><STRONG><a name="[2a]"></a>button_state_wait_debounce</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, button_task.o(i.button_state_wait_debounce))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = button_state_wait_debounce &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_short_press_operation
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_release_operation
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_press_operation
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_cancel
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button_task.o(i.button_state_wait_press)
<LI> button_task.o(i.button_state_wait_release)
</UL>
<P><STRONG><a name="[28]"></a>button_state_wait_long_press</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, button_task.o(i.button_state_wait_long_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = button_state_wait_long_press &rArr; button_state_wait_release &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_release
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_long_press_operation
</UL>
<BR>[Address Reference Count : 3]<UL><LI> button_task.o(i.button_state_wait_debounce)
<LI> button_task.o(i.button_state_wait_long_press)
<LI> button_task.o(i.button_state_wait_press)
</UL>
<P><STRONG><a name="[27]"></a>button_state_wait_press</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, button_task.o(i.button_state_wait_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = button_state_wait_press &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
</UL>
<BR>[Address Reference Count : 4]<UL><LI> button_task.o(i.button_init)
<LI> button_task.o(i.button_state_wait_debounce)
<LI> button_task.o(i.button_state_wait_press)
<LI> button_task.o(i.button_state_wait_release)
</UL>
<P><STRONG><a name="[29]"></a>button_state_wait_release</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, button_task.o(i.button_state_wait_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = button_state_wait_release &rArr; micros_timer_event_dispatch &rArr; micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_state_wait_long_press
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button_task.o(i.button_state_wait_long_press)
<LI> button_task.o(i.button_state_wait_release)
</UL>
<P><STRONG><a name="[5a]"></a>micros_add_task_subs</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, micros_core.o(i.micros_add_task_subs))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = micros_add_task_subs &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_substate_set
</UL>

<P><STRONG><a name="[5c]"></a>micros_dequeue_signal</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, micros_core.o(i.micros_dequeue_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = micros_dequeue_signal &rArr; micros_memory_deallocate &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_deallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_main
</UL>

<P><STRONG><a name="[5e]"></a>micros_enqueue_signal</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, micros_core.o(i.micros_enqueue_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = micros_enqueue_signal &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_allocate
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_is_empty_sig_list
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_dispatch
</UL>

<P><STRONG><a name="[60]"></a>micros_is_empty_sig_list</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, micros_core.o(i.micros_is_empty_sig_list))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_main
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_enqueue_signal
</UL>

<P><STRONG><a name="[62]"></a>micros_remove_task_subs</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, micros_core.o(i.micros_remove_task_subs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = micros_remove_task_subs &rArr; micros_memory_deallocate &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_deallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_event_substate_set
</UL>

<P><STRONG><a name="[67]"></a>micros_timer_add</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, micros_softtimer.o(i.micros_timer_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = micros_timer_add &rArr; micros_memory_allocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_timeout_ctrl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
</UL>

<P><STRONG><a name="[6d]"></a>micros_timer_calc_elapsed_time</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, micros_softtimer.o(i.micros_timer_calc_elapsed_time))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_timeout_ctrl
</UL>

<P><STRONG><a name="[6c]"></a>micros_timer_create_tmkey</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, micros_softtimer.o(i.micros_timer_create_tmkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = micros_timer_create_tmkey &rArr; micros_timer_search
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_search
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_event_dispatch
</UL>

<P><STRONG><a name="[6b]"></a>micros_timer_delete</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, micros_softtimer.o(i.micros_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = micros_timer_delete &rArr; micros_memory_deallocate &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_timeout_ctrl
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_memory_deallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_cancel
</UL>

<P><STRONG><a name="[6a]"></a>micros_timer_search</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, micros_softtimer.o(i.micros_timer_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = micros_timer_search
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_create_tmkey
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_cancel
</UL>

<P><STRONG><a name="[69]"></a>micros_timer_timeout_ctrl</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, micros_softtimer.o(i.micros_timer_timeout_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = micros_timer_timeout_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_calc_elapsed_time
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_delete
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros_timer_add
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
